[project]
name = "llmdata"
version = "0.0.1"
description = "A comprehensive Ray-based framework for large-scale LLM data preprocessing"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "LLMData Contributors"}
]
keywords = ["llm", "data", "preprocessing", "ray", "nlp", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "aiohttp>=3.12.1",
    "backoff>=2.2.1",
    "beautifulsoup4>=4.13.4",
    "defusedxml>=0.7.1",
    "fasteners>=0.19",
    "fasttext-numpy2-wheel==0.9.2",
    "ftfy==6.3.1",
    "huggingface-hub>=0.32.2",
    "jsonargparse>=4.40.0",
    "kenlm",
    "lxml>=5.4.0",
    "mmh3>=5.1.0",
    "numexpr>=2.10.1",
    "numpy>=2.0.0",
    "ocroscope",
    "orjson>=3.10.18",
    "pandas>=2.2.3",
    "pip>=25.1.1",
    "presidio-analyzer==2.2.358",
    "presidio-anonymizer==2.2.358",
    "pyarrow>=20.0.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "ray[default]==2.46.0",
    "requests>=2.32.3",
    "s3fs>=2025.5.1",
    "sentencepiece>=0.2.1",
    "spacy>=3.8.7",
    "tenacity>=9.1.2",
    "tldextract>=5.3.0",
    "torch>=2.8.0",
    "tqdm>=4.67.1",
    "trafilatura==2.0.0",
    "transformers>=4.52.3",
    "yamlcore>=0.0.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "ruff>=0.6.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "pydocstyle>=6.3.0",
]

docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/your-org/llmdata"
Documentation = "https://llmdata.readthedocs.io"
Repository = "https://github.com/your-org/llmdata"
Issues = "https://github.com/your-org/llmdata/issues"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "ruff>=0.6.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "pydocstyle>=6.3.0",
]

[tool.uv.sources]
ocroscope = { git = "https://github.com/Pleias/OCRoscope.git" }
kenlm = { git = "https://github.com/kpu/kenlm.git" }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = [
    "tests/",
    "docs/",
    "examples/",
]

[tool.ruff]
target-version = "py310"
line-length = 120
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
    "RUF", # ruff specific rules
    "D",   # pydocstyle
    "DOC", # pydoclint
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument _defaults
    "B006",  # do not use mutable data structures for argument _defaults
    "B904",  # Within `except` clause, raise exceptions with `raise ... from err`
    "UP035", # typing.Dict is deprecated, use dict instead (to be fixed later)
    "RUF013", # PEP 484 prohibits implicit Optional (to be fixed later)
    "D100", "D104", "D107" # Missing docstrings (to be fixed later)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["E501", "F401", "F811", "F841"]  # Allow unused variables in tests
"__init__.py" = ["F401", "F403"]  # Allow unused imports and star imports in init files

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.bandit]
exclude_dirs = ["tests", "examples", "docs"]
skips = ["B101", "B601"]

[tool.coverage.run]
source = ["llmdata"]
omit = [
    "tests/*",
    "examples/*",
    "docs/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
